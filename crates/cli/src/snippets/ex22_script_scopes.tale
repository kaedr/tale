// Scripts in TALE execute in a nested scope, meaning that any named values set
// with a Script are gone when the script finishes executing.
// To demonstrate:
Set outer_value = 1
Script: Scope Demo
    Set outer_value = outer_value + 1
    Set inner_value = 1
    // At this point, if we used output statements:
    Output: Outer: [outer_value]
    Output: Inner: [inner_value]
    // It would output 2 for outer_value and 1 for inner_value when run
End Script

Invoke Scope Demo
// But the same output statements after the Invoke statement
Output: Outer: [outer_value]
Output: Inner: [inner_value]
// Would show outer_value to be 1, as set on line 4
// And would error on `inner_value`, due to it not being defined in the outer scope.
